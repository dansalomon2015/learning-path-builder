{
  "root": true,
  "env": {
    "node": true,
    "es2022": true
  },
  "extends": ["eslint:recommended", "plugin:@typescript-eslint/recommended"],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "overrides": [
    {
      "files": ["packages/backend/**/*.ts"],
      "extends": ["plugin:@typescript-eslint/recommended-requiring-type-checking"],
      "parserOptions": {
        "project": "./packages/backend/tsconfig.json"
      }
    }
  ],
  "plugins": ["@typescript-eslint"],
  "rules": {
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_",
        "caughtErrorsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/explicit-function-return-type": [
      "error",
      {
        "allowExpressions": false,
        "allowTypedFunctionExpressions": false,
        "allowHigherOrderFunctions": false,
        "allowDirectConstAssertionInArrowFunctions": false,
        "allowIIFEs": false
      }
    ],
    "@typescript-eslint/explicit-module-boundary-types": "error",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-unnecessary-type-assertion": "error",
    "@typescript-eslint/prefer-nullish-coalescing": "error",
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/no-non-null-assertion": "error",
    "@typescript-eslint/consistent-type-imports": [
      "error",
      {
        "prefer": "type-imports",
        "fixStyle": "inline-type-imports"
      }
    ],
    "@typescript-eslint/consistent-type-definitions": ["error", "interface"],
    "@typescript-eslint/no-confusing-void-expression": [
      "error",
      {
        "ignoreArrowShorthand": true,
        "ignoreVoidOperator": true
      }
    ],
    "@typescript-eslint/prefer-reduce-type-parameter": "error",
    "@typescript-eslint/prefer-string-starts-ends-with": "error",
    "@typescript-eslint/switch-exhaustiveness-check": "error",
    "@typescript-eslint/no-unnecessary-condition": "error",
    "@typescript-eslint/no-unnecessary-type-arguments": "error",
    "@typescript-eslint/no-unused-expressions": "error",
    "@typescript-eslint/prefer-includes": "error",
    "@typescript-eslint/prefer-readonly": "error",
    "prefer-const": "error",
    "no-var": "error",
    "no-console": ["error", { "allow": ["warn", "error"] }],
    "no-debugger": "error",
    "no-alert": "error",
    "eqeqeq": ["error", "always", { "null": "ignore" }],
    "curly": ["error", "all"],
    "no-eval": "error",
    "no-implied-eval": "error",
    "no-new-func": "error",
    "no-return-await": "off",
    "@typescript-eslint/return-await": ["error", "always"],
    "no-throw-literal": "error",
    "@typescript-eslint/no-throw-literal": "error",
    "prefer-promise-reject-errors": "error",
    "no-useless-return": "error",
    "no-useless-catch": "error",
    "no-void": "error",
    "require-await": "error",
    "@typescript-eslint/require-await": "error",
    "no-await-in-loop": "warn",
    "no-promise-executor-return": "error",
    "max-nested-callbacks": ["error", 3],
    "complexity": ["error", 15],
    "max-depth": ["error", 4],
    "max-lines-per-function": ["warn", { "max": 100, "skipBlankLines": true, "skipComments": true }]
  },
  "ignorePatterns": [
    "node_modules/",
    "dist/",
    "build/",
    "coverage/",
    "*.js",
    "*.cjs",
    "packages/*/dist/",
    "packages/*/node_modules/",
    ".github/",
    "scripts/"
  ]
}
